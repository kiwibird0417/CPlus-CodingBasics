//3-6. 포인터와 메모리 해제(2)
/*
#include <iostream>

using namespace std;

int main() {
	//new 연산자
	//어떤 데이터형을 원하는지 new 연산자에게 알려주면,
	//new 연산자는 그에 알맞은 크기의 메모리 블록을
	//찾아내고 그 블록의 주소를 리턴함.

	int a;
	int* b = &a;

	int* pointer = new int;
	//====================================================
	//2) delete 연산자
	//사용한 메모리를 다시 메모리 폴로 환수
	//환수된 메모리는 프로그램의 다른 부분이 다시 사용
	int* ps = new int;
	//메모리 사용
	delete ps;

	//====================================================
	//***포인터: 4가지 규칙***
	//(1) new로 대입하지 않은 메모리는 delete로 해제 X
	//(2)같은 메모리 블록을 연달아 2번 delete 해제 X
	//(3)new[]로 메모리 대입, delete[]로 해제
	//(4) 대괄호 사용 X, delete도 대괄호 X

	//예제
	double* p3 = new double[3];	//double형 데이터 3개 저장할 수 있는 공간 대입
	p3[0] = 0.2;
	p3[1] = 0.5;
	p3[2] = 0.8;

	cout << "p3[1] is " << p3[1] << ".\n";

	p3 = p3 + 1;
	cout << "Now p3[0] is " << p3[0] << " and ";
	cout << "p3[1] is " << p3[1] << ".\n";

	p3 = p3 - 1;	//다시 시작 위치를 지시.
	delete[] p3;	//배열 메모리 해제

	//===================================================

	return 0;
}
*/